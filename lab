#!/usr/bin/env bash
# Get the absolute path to our script
ABSOLUTE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"

AbsolutePath() {
  echo "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/$(basename "${BASH_SOURCE[0]}")"
}

DisplayCommandMenu() {
  # Preserve the current state of the COLUMNS
  # variable and set to 1 so that our menu shows
  # all options vertically
  save_columns=$COLUMNS
  COLUMNS=1

  local command
  select option in "login" "provision" "remove" "restart" "start" "stop"
  do
    case $REPLY in
      1) command=login ;;
      2) command=provision ;;
      3) command=remove ;;
      4) command=restart ;;
      5) command=start ;;
      6) command=stop ;;
    esac
    break
  done

  # Restore the COLUMNS
  COLUMNS=$save_columns

  # return the selected command
  echo $command
}

ExecuteCommand() {
  local -r command=$1
  case $command in
        login) exec "$ABS_DIR/login" ;;
    provision) exec "$ABS_DIR/provision" ;;
       remove) exec "$ABS_DIR/remove" ;;
      restart) exec "$ABS_DIR/restart" ;;
         stop) exec "$ABS_DIR/stop" ;;
        start) exec "$ABS_DIR/start" ;;
  esac
}

# Set a variable to absolute path to this script
typeset -r ABS_DIR=$(dirname $(AbsolutePath))

# Sub-command passed on the command line if any
typeset -r command=$1

# If not passed the sub-command then display a menu
# to the user and let them select the sub-command
if [ -z $command ]
then
  command=$(DisplayCommandMenu)
fi

exec "$ABS_DIR/$command"

