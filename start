#!/usr/bin/env bash

spinner()
{
  local pid=$1
  local delay=0.75
  local spinstr='|/-\'
  while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
    local temp=${spinstr#?}
    printf " [%c]  " "$spinstr"
    local spinstr=$temp${spinstr%"$temp"}
    sleep $delay
    printf "\b\b\b\b\b\b"
  done
  printf "    \b\b\b\b"
}

# Prompt and read a value from the terminal
GetValue() {
  typeset -r prompt=$1
  have_value=0
  while [ $have_value -eq 0 ]
  do
    read -p "$prompt: " VALUE
    [ ! -z "$VALUE" ] && have_value=1
  done
  echo "$VALUE"
}

GetEmail() {
  TSP_EMAIL=$(GetValue "Enter your E-mail")
}

GetApiToken() {
  TSP_API_TOKEN=$(GetValue "Enter your API token")
}

GetApplicationId() {
  TSI_APP_ID=$(GetValue "Enter your Application Id")
}

#
# Get the required configuration
# from the user
GetConfiguration() {
  GetEmail
  GetApiToken
  GetApplicationId
}

VerifyConfiguration() {
  COLUMNS_SAVED=$COLUMNS
  COLUMNS=1
  active=1
  while [ $active -eq 1 ]
  do
    clear
    echo "Enter 4 to provision the virtual machine or "
    echo "enter the number of value to edit"
    select option in "E-mail: $TSP_EMAIL" "API Token: $TSP_API_TOKEN" "Application Id: $TSI_APP_ID" "Provision virtual machine"
    do
      case $REPLY in
        1) GetEmail ; break ;;
        2) GetApiToken ; break ;;
        3) GetApplicationId ; break ;;
        4) active=0 ; break ;;
      esac
    done
  done
  COLUMNS=$COLUMNS_SAVED
}

ExportConfiguration() {
  export TSP_EMAIL
  export TSP_API_TOKEN
  export TSP_API_HOST="api.truesight-staging.bmc.com"
  export TSI_APP_ID
}

ShowConfiguration()  {
  echo "E-mail: $TSP_EMAIL"
  echo "API token: $TSP_API_TOKEN"
  echo "Application Id: $TSI_APP_ID"
}

CreateVirtualMachine() {
  clear
  echo "Using the following configuration:"
  ShowConfiguration
  echo -n "Provisioning virtual machine " 
  (vagrant up 2>&1 > /dev/null) &
  spinner $!
  echo
  echo "Done!"
}

GetConfiguration
VerifyConfiguration
ExportConfiguration
CreateVirtualMachine

